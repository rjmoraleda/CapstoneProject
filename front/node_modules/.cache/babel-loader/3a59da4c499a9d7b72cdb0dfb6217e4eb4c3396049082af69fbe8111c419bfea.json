{"ast":null,"code":"export const createImage=url=>new Promise((resolve,reject)=>{const image=new Image();image.addEventListener(\"load\",()=>resolve(image));image.addEventListener(\"error\",error=>reject(error));image.setAttribute(\"crossOrigin\",\"anonymous\");// needed to avoid cross-origin issues on CodeSandbox\nimage.src=url;});export function getRadianAngle(degreeValue){return degreeValue*Math.PI/180;}/**\r\n * Returns the new bounding area of a rotated rectangle.\r\n */export function rotateSize(width,height,rotation){const rotRad=getRadianAngle(rotation);return{width:Math.abs(Math.cos(rotRad)*width)+Math.abs(Math.sin(rotRad)*height),height:Math.abs(Math.sin(rotRad)*width)+Math.abs(Math.cos(rotRad)*height)};}/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n */export default async function getCroppedImg(imageSrc,pixelCrop){let rotation=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let flip=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{horizontal:false,vertical:false};const image=await createImage(imageSrc);const canvas=document.createElement(\"canvas\");const ctx=canvas.getContext(\"2d\");if(!ctx){return null;}const rotRad=getRadianAngle(rotation);// calculate bounding box of the rotated image\nconst{width:bBoxWidth,height:bBoxHeight}=rotateSize(image.width,image.height,rotation);// set canvas size to match the bounding box\ncanvas.width=bBoxWidth;canvas.height=bBoxHeight;// translate canvas context to a central location to allow rotating and flipping around the center\nctx.translate(bBoxWidth/2,bBoxHeight/2);ctx.rotate(rotRad);ctx.scale(flip.horizontal?-1:1,flip.vertical?-1:1);ctx.translate(-image.width/2,-image.height/2);// draw rotated image\nctx.drawImage(image,0,0);// croppedAreaPixels values are bounding box relative\n// extract the cropped image using these values\nconst data=ctx.getImageData(pixelCrop.x,pixelCrop.y,pixelCrop.width,pixelCrop.height);// set canvas width to final desired crop size - this will clear existing context\ncanvas.width=pixelCrop.width;canvas.height=pixelCrop.height;// paste generated rotate image at the top left corner\nctx.putImageData(data,0,0);// As Base64 string\n// return canvas.toDataURL('image/jpeg');\n// As a blob\nreturn new Promise((resolve,reject)=>{canvas.toBlob(file=>{resolve({url:URL.createObjectURL(file),file:file});});});}","map":{"version":3,"names":["createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","getRadianAngle","degreeValue","Math","PI","rotateSize","width","height","rotation","rotRad","abs","cos","sin","getCroppedImg","imageSrc","pixelCrop","arguments","length","undefined","flip","horizontal","vertical","canvas","document","createElement","ctx","getContext","bBoxWidth","bBoxHeight","translate","rotate","scale","drawImage","data","getImageData","x","y","putImageData","toBlob","file","URL","createObjectURL"],"sources":["C:/Users/moral/Desktop/Capstone Project JAR/JAR/src/components/crop/cropImage.js"],"sourcesContent":["export const createImage = (url) =>\r\n   new Promise((resolve, reject) => {\r\n      const image = new Image();\r\n      image.addEventListener(\"load\", () => resolve(image));\r\n      image.addEventListener(\"error\", (error) => reject(error));\r\n      image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\r\n      image.src = url;\r\n   });\r\n\r\nexport function getRadianAngle(degreeValue) {\r\n   return (degreeValue * Math.PI) / 180;\r\n}\r\n\r\n/**\r\n * Returns the new bounding area of a rotated rectangle.\r\n */\r\nexport function rotateSize(width, height, rotation) {\r\n   const rotRad = getRadianAngle(rotation);\r\n\r\n   return {\r\n      width:\r\n         Math.abs(Math.cos(rotRad) * width) +\r\n         Math.abs(Math.sin(rotRad) * height),\r\n      height:\r\n         Math.abs(Math.sin(rotRad) * width) +\r\n         Math.abs(Math.cos(rotRad) * height),\r\n   };\r\n}\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n */\r\nexport default async function getCroppedImg(\r\n   imageSrc,\r\n   pixelCrop,\r\n   rotation = 0,\r\n   flip = { horizontal: false, vertical: false }\r\n) {\r\n   const image = await createImage(imageSrc);\r\n   const canvas = document.createElement(\"canvas\");\r\n   const ctx = canvas.getContext(\"2d\");\r\n\r\n   if (!ctx) {\r\n      return null;\r\n   }\r\n\r\n   const rotRad = getRadianAngle(rotation);\r\n\r\n   // calculate bounding box of the rotated image\r\n   const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\r\n      image.width,\r\n      image.height,\r\n      rotation\r\n   );\r\n\r\n   // set canvas size to match the bounding box\r\n   canvas.width = bBoxWidth;\r\n   canvas.height = bBoxHeight;\r\n\r\n   // translate canvas context to a central location to allow rotating and flipping around the center\r\n   ctx.translate(bBoxWidth / 2, bBoxHeight / 2);\r\n   ctx.rotate(rotRad);\r\n   ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1);\r\n   ctx.translate(-image.width / 2, -image.height / 2);\r\n\r\n   // draw rotated image\r\n   ctx.drawImage(image, 0, 0);\r\n\r\n   // croppedAreaPixels values are bounding box relative\r\n   // extract the cropped image using these values\r\n   const data = ctx.getImageData(\r\n      pixelCrop.x,\r\n      pixelCrop.y,\r\n      pixelCrop.width,\r\n      pixelCrop.height\r\n   );\r\n\r\n   // set canvas width to final desired crop size - this will clear existing context\r\n   canvas.width = pixelCrop.width;\r\n   canvas.height = pixelCrop.height;\r\n\r\n   // paste generated rotate image at the top left corner\r\n   ctx.putImageData(data, 0, 0);\r\n\r\n   // As Base64 string\r\n   // return canvas.toDataURL('image/jpeg');\r\n\r\n   // As a blob\r\n   return new Promise((resolve, reject) => {\r\n      canvas.toBlob((file) => {\r\n         resolve({ url: URL.createObjectURL(file), file: file });\r\n      });\r\n   });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}