{"ast":null,"code":"import React,{useState}from\"react\";import\"./cropeasy.css\";import Cropper from\"react-easy-crop\";import getCroppedImg from\"./cropImage\";import{useMutation,useQueryClient}from\"@tanstack/react-query\";import{updateProfilePicture}from\"../../services/index/users\";import{useDispatch,useSelector}from\"react-redux\";import{userActions}from\"../../store/reducers/userReducers\";import toast from\"react-hot-toast\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CropEasy=_ref=>{let{photo,setOpenCrop}=_ref;const userState=useSelector(state=>state.user);const queryClient=useQueryClient();const dispatch=useDispatch();const[crop,setCrop]=useState({x:0,y:0});const[zoom,setZoom]=useState(1);const[croppedAreaPixels,setCroppedAreaPixels]=useState(null);const{mutate,isLoading}=useMutation({mutationFn:_ref2=>{let{token,formData}=_ref2;return updateProfilePicture({token:token,formData:formData});},//after getting the data from the mutation this function run\nonSuccess:data=>{dispatch(userActions.setUserInfo(data));setOpenCrop(false);//saving the data in the local storage to better experience\nlocalStorage.setItem(\"account\",JSON.stringify(data));queryClient.invalidateQueries([\"profile\"]);toast.success(\"Profile Photo Updated Successful\");console.log(data);},onError:error=>{toast.error(error.message);console.log(error);}});const handleCropComplete=(cropArea,cropAreaPixels)=>{setCroppedAreaPixels(cropAreaPixels);};const handleCropImage=async()=>{try{var _photo$file,_photo$file2;const croppedImg=await getCroppedImg(photo===null||photo===void 0?void 0:photo.url,croppedAreaPixels);const file=new File([croppedImg.file],\"\".concat(photo===null||photo===void 0?void 0:(_photo$file=photo.file)===null||_photo$file===void 0?void 0:_photo$file.name),{type:photo===null||photo===void 0?void 0:(_photo$file2=photo.file)===null||_photo$file2===void 0?void 0:_photo$file2.type});const formData=new FormData();formData.append(\"profilePicture\",file);mutate({token:userState.userInfo.token,formData:formData});}catch(error){toast.error(error.message);console.log(error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"pop-modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pop\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"pop-title\",children:\"Crop Image\"}),/*#__PURE__*/_jsx(\"div\",{className:\"crop-image\",children:/*#__PURE__*/_jsx(Cropper,{image:photo===null||photo===void 0?void 0:photo.url,crop:crop,zoom:zoom,aspect:1,onZoomChange:setZoom,onCropChange:setCrop,onCropComplete:handleCropComplete})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"zoomRange\",className:\"zoom\",children:[\"Zoom: \",\"\".concat(Math.round(zoom*100))]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",name:\"zoomRange\",id:\"zoomRange\",min:1,max:3,step:0.1,value:zoom,onChange:e=>setZoom(e.target.value),className:\"zoom-range\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"crop-btn\",children:[/*#__PURE__*/_jsx(\"button\",{disabled:isLoading,className:\"crop-cancel\",onClick:()=>setOpenCrop(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"crop-upload\",onClick:handleCropImage,children:\"Crop & Upload\"})]})]})});};export default CropEasy;","map":{"version":3,"names":["React","useState","Cropper","getCroppedImg","useMutation","useQueryClient","updateProfilePicture","useDispatch","useSelector","userActions","toast","jsx","_jsx","jsxs","_jsxs","CropEasy","_ref","photo","setOpenCrop","userState","state","user","queryClient","dispatch","crop","setCrop","x","y","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","mutate","isLoading","mutationFn","_ref2","token","formData","onSuccess","data","setUserInfo","localStorage","setItem","JSON","stringify","invalidateQueries","success","console","log","onError","error","message","handleCropComplete","cropArea","cropAreaPixels","handleCropImage","_photo$file","_photo$file2","croppedImg","url","file","File","concat","name","type","FormData","append","userInfo","className","children","image","aspect","onZoomChange","onCropChange","onCropComplete","htmlFor","Math","round","id","min","max","step","value","onChange","e","target","disabled","onClick"],"sources":["C:/Users/moral/Desktop/Capstone Project JAR/JAR/src/components/crop/CropEasy.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./cropeasy.css\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport getCroppedImg from \"./cropImage\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { updateProfilePicture } from \"../../services/index/users\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userActions } from \"../../store/reducers/userReducers\";\r\nimport toast from \"react-hot-toast\";\r\nconst CropEasy = ({ photo, setOpenCrop }) => {\r\n   const userState = useSelector((state) => state.user);\r\n   const queryClient = useQueryClient();\r\n   const dispatch = useDispatch();\r\n   const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n   const [zoom, setZoom] = useState(1);\r\n   const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n\r\n   const { mutate, isLoading } = useMutation({\r\n      mutationFn: ({ token, formData }) => {\r\n         return updateProfilePicture({\r\n            token: token,\r\n            formData: formData,\r\n         });\r\n      },\r\n\r\n      //after getting the data from the mutation this function run\r\n      onSuccess: (data) => {\r\n         dispatch(userActions.setUserInfo(data));\r\n         setOpenCrop(false);\r\n         //saving the data in the local storage to better experience\r\n         localStorage.setItem(\"account\", JSON.stringify(data));\r\n         queryClient.invalidateQueries([\"profile\"]);\r\n         toast.success(\"Profile Photo Updated Successful\");\r\n         console.log(data);\r\n      },\r\n      onError: (error) => {\r\n         toast.error(error.message);\r\n         console.log(error);\r\n      },\r\n   });\r\n\r\n   const handleCropComplete = (cropArea, cropAreaPixels) => {\r\n      setCroppedAreaPixels(cropAreaPixels);\r\n   };\r\n\r\n   const handleCropImage = async () => {\r\n      try {\r\n         const croppedImg = await getCroppedImg(photo?.url, croppedAreaPixels);\r\n\r\n         const file = new File([croppedImg.file], `${photo?.file?.name}`, {\r\n            type: photo?.file?.type,\r\n         });\r\n\r\n         const formData = new FormData();\r\n         formData.append(\"profilePicture\", file);\r\n\r\n         mutate({ token: userState.userInfo.token, formData: formData });\r\n      } catch (error) {\r\n         toast.error(error.message);\r\n         console.log(error);\r\n      }\r\n   };\r\n   return (\r\n      <div className=\"pop-modal\">\r\n         <div className=\"pop\">\r\n            <h2 className=\"pop-title\">Crop Image</h2>\r\n            <div className=\"crop-image\">\r\n               <Cropper\r\n                  image={photo?.url}\r\n                  crop={crop}\r\n                  zoom={zoom}\r\n                  aspect={1}\r\n                  onZoomChange={setZoom}\r\n                  onCropChange={setCrop}\r\n                  onCropComplete={handleCropComplete}\r\n               />\r\n            </div>\r\n            <div>\r\n               <label htmlFor=\"zoomRange\" className=\"zoom\">\r\n                  Zoom: {`${Math.round(zoom * 100)}`}\r\n               </label>\r\n               <input\r\n                  type=\"range\"\r\n                  name=\"zoomRange\"\r\n                  id=\"zoomRange\"\r\n                  min={1}\r\n                  max={3}\r\n                  step={0.1}\r\n                  value={zoom}\r\n                  onChange={(e) => setZoom(e.target.value)}\r\n                  className=\"zoom-range\"\r\n               />\r\n            </div>\r\n            <div className=\"crop-btn\">\r\n               <button\r\n                  disabled={isLoading}\r\n                  className=\"crop-cancel\"\r\n                  onClick={() => setOpenCrop(false)}\r\n               >\r\n                  Cancel\r\n               </button>\r\n               <button className=\"crop-upload\" onClick={handleCropImage}>\r\n                  Crop & Upload\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default CropEasy;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}