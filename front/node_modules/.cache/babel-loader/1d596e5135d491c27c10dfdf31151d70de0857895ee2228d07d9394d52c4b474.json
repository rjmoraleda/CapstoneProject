{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moral\\\\Desktop\\\\Capstone Project JAR\\\\JAR\\\\src\\\\components\\\\ArticleCard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./components.css\";\n// import { images } from \"../constants\";\n// import { useQuery } from \"@tanstack/react-query\";\n// import { getAllPost } from \"../services/index/posts\";\n// import toast from \"react-hot-toast\";\n\n// const ArticleCard = () => {\n//    const [activeTab, setActiveTab] = useState(1);\n\n//    const handleTabClick = (index) => {\n//       setActiveTab((prevActiveTab) =>\n//          prevActiveTab === index ? prevActiveTab : index\n//       );\n//    };\n\n//    const { data, isLoading, isError } = useQuery({\n//       queryFn: () => getAllPost,\n//       queryKey: [\"posts\"],\n//       onError: (error) => {\n//          toast.error(error.message);\n//          console.log(error);\n//       },\n//    });\n\n//    const tabTitles = [\"Latest\", \"Popular\", \"Featured\"];\n\n//    // Array of content for each tab\n//    const tabContents = [\n//       // This is for Latest Content TAB\n//       <div className=\"latest-content\">\n//          <div className=\"latest\">\n//             <div className=\"latest-img\">\n//                <img\n//                   src={images.latestPost}\n//                   alt=\"Latest Post\"\n//                   className=\"responsive-image\"\n//                />\n//             </div>\n//             <div className=\"latest-text\">\n//                <h2>\n//                   Need to stay up-to-date with the most relevant trends in\n//                   software.\n//                </h2>\n//                <p>\n//                   You can do so much more once you create your account. Follow\n//                   the devs and topics you care about, and keep up-to-date.\n//                </p>\n//                <div className=\"latest-tags\">\n//                   <ul>\n//                      <li>\n//                         <a href=\"/\" className=\"javascript\">\n//                            #javascript\n//                         </a>\n//                      </li>\n//                      <li>\n//                         <a href=\"/\" className=\"html\">\n//                            #html\n//                         </a>\n//                      </li>\n//                      <li>\n//                         <a href=\"/\" className=\"css\">\n//                            #css\n//                         </a>\n//                      </li>\n//                      <li>\n//                         <a href=\"/\" className=\"tip\">\n//                            #tip\n//                         </a>\n//                      </li>\n//                   </ul>\n//                </div>\n//                <div className=\"read-profile\">\n//                   <a href=\"/\" className=\"read-more\">\n//                      Read More\n//                   </a>\n//                   <div className=\"post-profile\">\n//                      <img\n//                         src={images.theProfile}\n//                         className=\"profile\"\n//                         alt=\"The Profile\"\n//                      />\n//                   </div>\n//                </div>\n//             </div>\n//          </div>\n//          <div className=\"previous-content\">\n//             {!isLoading &&\n//                !isError &&\n//                data.map((post) => (\n//                   <div className=\"previous-post\" key={post.id}>\n//                      <h2>{post.title}</h2>\n//                      <span className=\"previous-post-date\">\n//                         {new Date(post.createdAt).toLocaleDateString(\"en\", {\n//                            day: \"numeric\",\n//                            month: \"short\",\n//                            year: \"numeric\",\n//                         })}\n//                      </span>\n//                   </div>\n//                ))}\n//             <div className=\"previous-post\">\n//                <h2>The Ultimate Deployment Guide</h2>\n//                <p>\n//                   Explore the step-by-step guide to deploying GitLab on\n//                   Kubernetes, focusing on the Omnibus package configuration.\n//                </p>\n//                <div className=\"latest-tags\">\n//                   <ul>\n//                      <li>\n//                         <a href=\"/\" className=\"development\">\n//                            #development\n//                         </a>\n//                      </li>\n\n//                      <li>\n//                         <a href=\"/\" className=\"github\">\n//                            #github\n//                         </a>\n//                      </li>\n//                      <li>\n//                         <a href=\"/\" className=\"tip\">\n//                            #tip\n//                         </a>\n//                      </li>\n//                   </ul>\n//                </div>\n//                {/* This is for the Read More button */}\n//                <div className=\"read-profile\">\n//                   <div className=\"readmore-comments\">\n//                      <a href=\"/\" className=\"read-more\">\n//                         Read More\n//                      </a>\n\n//                      <a href=\"/\" className=\"comments\">\n//                         18 Comments\n//                      </a>\n//                   </div>\n//                   <div className=\"post-profile\">\n//                      <img\n//                         src={images.theProfile}\n//                         className=\"profile\"\n//                         alt=\"The Profile\"\n//                      />\n//                   </div>\n//                </div>\n//             </div>\n//             <div className=\"previous-post\">\n//                <h2>The Ultimate Deployment Guide</h2>\n//                <p>\n//                   Explore the step-by-step guide to deploying GitLab on\n//                   Kubernetes, focusing on the Omnibus package configuration.\n//                </p>\n//                <div className=\"latest-tags\">\n//                   <ul>\n//                      <li>\n//                         <a href=\"/\" className=\"development\">\n//                            #development\n//                         </a>\n//                      </li>\n\n//                      <li>\n//                         <a href=\"/\" className=\"github\">\n//                            #github\n//                         </a>\n//                      </li>\n//                      <li>\n//                         <a href=\"/\" className=\"tip\">\n//                            #tip\n//                         </a>\n//                      </li>\n//                   </ul>\n//                </div>\n//                {/* This is for the Read More button */}\n//                <div className=\"read-profile\">\n//                   <div className=\"readmore-comments\">\n//                      <a href=\"/\" className=\"read-more\">\n//                         Read More\n//                      </a>\n\n//                      <a href=\"/\" className=\"comments\">\n//                         18 Comments\n//                      </a>\n//                   </div>\n\n//                   <div className=\"post-profile\">\n//                      <img\n//                         src={images.theProfile}\n//                         className=\"profile\"\n//                         alt=\"The Profile\"\n//                      />\n//                   </div>\n//                </div>\n//             </div>\n//             <div className=\"previous-post\">\n//                <h2>The Ultimate Deployment Guide</h2>\n//                <p>\n//                   Explore the step-by-step guide to deploying GitLab on\n//                   Kubernetes, focusing on the Omnibus package configuration.\n//                </p>\n//                <div className=\"latest-tags\">\n//                   <ul>\n//                      <li>\n//                         <a href=\"/\" className=\"development\">\n//                            #development\n//                         </a>\n//                      </li>\n\n//                      <li>\n//                         <a href=\"/\" className=\"github\">\n//                            #github\n//                         </a>\n//                      </li>\n//                      <li>\n//                         <a href=\"/\" className=\"tip\">\n//                            #tip\n//                         </a>\n//                      </li>\n//                   </ul>\n//                </div>\n//                {/* This is for the Read More button */}\n//                <div className=\"read-profile\">\n//                   <div className=\"readmore-comments\">\n//                      <a href=\"/\" className=\"read-more\">\n//                         Read More\n//                      </a>\n\n//                      <a href=\"/\" className=\"comments\">\n//                         18 Comments\n//                      </a>\n//                   </div>\n//                   <div className=\"post-profile\">\n//                      <img\n//                         src={images.theProfile}\n//                         className=\"profile\"\n//                         alt=\"The Profile\"\n//                      />\n//                   </div>\n//                </div>\n//             </div>\n//          </div>\n//       </div>,\n\n//       // This is for Popular Content TAB\n//       <div className=\"popular-content\">\n//          <h1>Popular Content Goes Here</h1>\n//       </div>,\n\n//       // This is for Featured Content TAB\n//       <div className=\"featured-content\">\n//          <h1>Featured Content Goes Here</h1>\n//       </div>,\n//    ];\n\n//    return (\n//       <>\n//          <div className=\"label-accordion\">\n//             <div className=\"accordion\">\n//                <div className=\"accordion-container\">\n//                   {tabTitles.map((title, index) => (\n//                      <div\n//                         key={index}\n//                         className={`accordion-tab ${\n//                            activeTab === index + 1 ? \"active\" : \"\"\n//                         }`}\n//                         onClick={() => handleTabClick(index + 1)}\n//                      >\n//                         <div className=\"tab-title\">{title}</div>\n//                      </div>\n//                   ))}\n//                </div>\n//             </div>\n//          </div>\n\n//          {activeTab && (\n//             <div className=\"tab-content\">{tabContents[activeTab - 1]}</div>\n//          )}\n//       </>\n//    );\n// };\n\n// export default ArticleCard;\n\nimport React, { useEffect, useState } from \"react\";\nimport { images, stables } from \"../constants\";\nimport \"./css/articlecard.css\";\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ArticleCard = ({\n  post,\n  className\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Simulate data fetching (replace with your actual data fetching logic)\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `article-container ${className}`,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this) // Display loading spinner while loading\n    : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src:\n        // Check if there is a photo from the uploads folder\n        post.photo ? stables.UPLOAD_FOLDER_BASE_URL + post.photo : images.noImage,\n        alt: \"latest post\",\n        className: \"article-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"article-content\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/topics/${post.slug}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"article-title\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"article-description\",\n        children: post.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"article-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"readmore-comments\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/topics/${post.slug}`,\n            className: \"read-more\",\n            children: \"Read More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              className: \"comments\",\n              children: \"18 Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [new Date(post.createdAt).getDate(), \" \", new Date(post.createdAt).toLocaleString(\"default\", {\n                month: \"long\"\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.user.avatar ? stables.UPLOAD_FOLDER_BASE_URL + post.user.avatar : images.user,\n            className: \"profile\",\n            alt: \"The Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"verified\",\n            children: [post.user.verified ? /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n              className: \"verified-icons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n              className: \"not-verified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 28\n            }, this), post.user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 7\n  }, this);\n};\n_s(ArticleCard, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n_c = ArticleCard;\nexport default ArticleCard;\nvar _c;\n$RefreshReg$(_c, \"ArticleCard\");","map":{"version":3,"names":["React","useEffect","useState","images","stables","FaCheckCircle","Link","LoadingSpinner","jsxDEV","_jsxDEV","Fragment","_Fragment","ArticleCard","post","className","_s","isLoading","setIsLoading","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","src","photo","UPLOAD_FOLDER_BASE_URL","noImage","alt","to","slug","title","caption","href","Date","createdAt","getDate","toLocaleString","month","user","avatar","verified","name","_c","$RefreshReg$"],"sources":["C:/Users/moral/Desktop/Capstone Project JAR/JAR/src/components/ArticleCard.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./components.css\";\r\n// import { images } from \"../constants\";\r\n// import { useQuery } from \"@tanstack/react-query\";\r\n// import { getAllPost } from \"../services/index/posts\";\r\n// import toast from \"react-hot-toast\";\r\n\r\n// const ArticleCard = () => {\r\n//    const [activeTab, setActiveTab] = useState(1);\r\n\r\n//    const handleTabClick = (index) => {\r\n//       setActiveTab((prevActiveTab) =>\r\n//          prevActiveTab === index ? prevActiveTab : index\r\n//       );\r\n//    };\r\n\r\n//    const { data, isLoading, isError } = useQuery({\r\n//       queryFn: () => getAllPost,\r\n//       queryKey: [\"posts\"],\r\n//       onError: (error) => {\r\n//          toast.error(error.message);\r\n//          console.log(error);\r\n//       },\r\n//    });\r\n\r\n//    const tabTitles = [\"Latest\", \"Popular\", \"Featured\"];\r\n\r\n//    // Array of content for each tab\r\n//    const tabContents = [\r\n//       // This is for Latest Content TAB\r\n//       <div className=\"latest-content\">\r\n//          <div className=\"latest\">\r\n//             <div className=\"latest-img\">\r\n//                <img\r\n//                   src={images.latestPost}\r\n//                   alt=\"Latest Post\"\r\n//                   className=\"responsive-image\"\r\n//                />\r\n//             </div>\r\n//             <div className=\"latest-text\">\r\n//                <h2>\r\n//                   Need to stay up-to-date with the most relevant trends in\r\n//                   software.\r\n//                </h2>\r\n//                <p>\r\n//                   You can do so much more once you create your account. Follow\r\n//                   the devs and topics you care about, and keep up-to-date.\r\n//                </p>\r\n//                <div className=\"latest-tags\">\r\n//                   <ul>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"javascript\">\r\n//                            #javascript\r\n//                         </a>\r\n//                      </li>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"html\">\r\n//                            #html\r\n//                         </a>\r\n//                      </li>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"css\">\r\n//                            #css\r\n//                         </a>\r\n//                      </li>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"tip\">\r\n//                            #tip\r\n//                         </a>\r\n//                      </li>\r\n//                   </ul>\r\n//                </div>\r\n//                <div className=\"read-profile\">\r\n//                   <a href=\"/\" className=\"read-more\">\r\n//                      Read More\r\n//                   </a>\r\n//                   <div className=\"post-profile\">\r\n//                      <img\r\n//                         src={images.theProfile}\r\n//                         className=\"profile\"\r\n//                         alt=\"The Profile\"\r\n//                      />\r\n//                   </div>\r\n//                </div>\r\n//             </div>\r\n//          </div>\r\n//          <div className=\"previous-content\">\r\n//             {!isLoading &&\r\n//                !isError &&\r\n//                data.map((post) => (\r\n//                   <div className=\"previous-post\" key={post.id}>\r\n//                      <h2>{post.title}</h2>\r\n//                      <span className=\"previous-post-date\">\r\n//                         {new Date(post.createdAt).toLocaleDateString(\"en\", {\r\n//                            day: \"numeric\",\r\n//                            month: \"short\",\r\n//                            year: \"numeric\",\r\n//                         })}\r\n//                      </span>\r\n//                   </div>\r\n//                ))}\r\n//             <div className=\"previous-post\">\r\n//                <h2>The Ultimate Deployment Guide</h2>\r\n//                <p>\r\n//                   Explore the step-by-step guide to deploying GitLab on\r\n//                   Kubernetes, focusing on the Omnibus package configuration.\r\n//                </p>\r\n//                <div className=\"latest-tags\">\r\n//                   <ul>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"development\">\r\n//                            #development\r\n//                         </a>\r\n//                      </li>\r\n\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"github\">\r\n//                            #github\r\n//                         </a>\r\n//                      </li>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"tip\">\r\n//                            #tip\r\n//                         </a>\r\n//                      </li>\r\n//                   </ul>\r\n//                </div>\r\n//                {/* This is for the Read More button */}\r\n//                <div className=\"read-profile\">\r\n//                   <div className=\"readmore-comments\">\r\n//                      <a href=\"/\" className=\"read-more\">\r\n//                         Read More\r\n//                      </a>\r\n\r\n//                      <a href=\"/\" className=\"comments\">\r\n//                         18 Comments\r\n//                      </a>\r\n//                   </div>\r\n//                   <div className=\"post-profile\">\r\n//                      <img\r\n//                         src={images.theProfile}\r\n//                         className=\"profile\"\r\n//                         alt=\"The Profile\"\r\n//                      />\r\n//                   </div>\r\n//                </div>\r\n//             </div>\r\n//             <div className=\"previous-post\">\r\n//                <h2>The Ultimate Deployment Guide</h2>\r\n//                <p>\r\n//                   Explore the step-by-step guide to deploying GitLab on\r\n//                   Kubernetes, focusing on the Omnibus package configuration.\r\n//                </p>\r\n//                <div className=\"latest-tags\">\r\n//                   <ul>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"development\">\r\n//                            #development\r\n//                         </a>\r\n//                      </li>\r\n\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"github\">\r\n//                            #github\r\n//                         </a>\r\n//                      </li>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"tip\">\r\n//                            #tip\r\n//                         </a>\r\n//                      </li>\r\n//                   </ul>\r\n//                </div>\r\n//                {/* This is for the Read More button */}\r\n//                <div className=\"read-profile\">\r\n//                   <div className=\"readmore-comments\">\r\n//                      <a href=\"/\" className=\"read-more\">\r\n//                         Read More\r\n//                      </a>\r\n\r\n//                      <a href=\"/\" className=\"comments\">\r\n//                         18 Comments\r\n//                      </a>\r\n//                   </div>\r\n\r\n//                   <div className=\"post-profile\">\r\n//                      <img\r\n//                         src={images.theProfile}\r\n//                         className=\"profile\"\r\n//                         alt=\"The Profile\"\r\n//                      />\r\n//                   </div>\r\n//                </div>\r\n//             </div>\r\n//             <div className=\"previous-post\">\r\n//                <h2>The Ultimate Deployment Guide</h2>\r\n//                <p>\r\n//                   Explore the step-by-step guide to deploying GitLab on\r\n//                   Kubernetes, focusing on the Omnibus package configuration.\r\n//                </p>\r\n//                <div className=\"latest-tags\">\r\n//                   <ul>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"development\">\r\n//                            #development\r\n//                         </a>\r\n//                      </li>\r\n\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"github\">\r\n//                            #github\r\n//                         </a>\r\n//                      </li>\r\n//                      <li>\r\n//                         <a href=\"/\" className=\"tip\">\r\n//                            #tip\r\n//                         </a>\r\n//                      </li>\r\n//                   </ul>\r\n//                </div>\r\n//                {/* This is for the Read More button */}\r\n//                <div className=\"read-profile\">\r\n//                   <div className=\"readmore-comments\">\r\n//                      <a href=\"/\" className=\"read-more\">\r\n//                         Read More\r\n//                      </a>\r\n\r\n//                      <a href=\"/\" className=\"comments\">\r\n//                         18 Comments\r\n//                      </a>\r\n//                   </div>\r\n//                   <div className=\"post-profile\">\r\n//                      <img\r\n//                         src={images.theProfile}\r\n//                         className=\"profile\"\r\n//                         alt=\"The Profile\"\r\n//                      />\r\n//                   </div>\r\n//                </div>\r\n//             </div>\r\n//          </div>\r\n//       </div>,\r\n\r\n//       // This is for Popular Content TAB\r\n//       <div className=\"popular-content\">\r\n//          <h1>Popular Content Goes Here</h1>\r\n//       </div>,\r\n\r\n//       // This is for Featured Content TAB\r\n//       <div className=\"featured-content\">\r\n//          <h1>Featured Content Goes Here</h1>\r\n//       </div>,\r\n//    ];\r\n\r\n//    return (\r\n//       <>\r\n//          <div className=\"label-accordion\">\r\n//             <div className=\"accordion\">\r\n//                <div className=\"accordion-container\">\r\n//                   {tabTitles.map((title, index) => (\r\n//                      <div\r\n//                         key={index}\r\n//                         className={`accordion-tab ${\r\n//                            activeTab === index + 1 ? \"active\" : \"\"\r\n//                         }`}\r\n//                         onClick={() => handleTabClick(index + 1)}\r\n//                      >\r\n//                         <div className=\"tab-title\">{title}</div>\r\n//                      </div>\r\n//                   ))}\r\n//                </div>\r\n//             </div>\r\n//          </div>\r\n\r\n//          {activeTab && (\r\n//             <div className=\"tab-content\">{tabContents[activeTab - 1]}</div>\r\n//          )}\r\n//       </>\r\n//    );\r\n// };\r\n\r\n// export default ArticleCard;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { images, stables } from \"../constants\";\r\nimport \"./css/articlecard.css\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\n\r\nconst ArticleCard = ({ post, className }) => {\r\n   const [isLoading, setIsLoading] = useState(true);\r\n   useEffect(() => {\r\n      // Simulate data fetching (replace with your actual data fetching logic)\r\n      setTimeout(() => {\r\n         setIsLoading(false);\r\n      }, 2000);\r\n   }, []);\r\n\r\n   return (\r\n      <div className={`article-container ${className}`}>\r\n         {isLoading ? (\r\n            <LoadingSpinner /> // Display loading spinner while loading\r\n         ) : (\r\n            <>\r\n               <img\r\n                  src={\r\n                     // Check if there is a photo from the uploads folder\r\n                     post.photo\r\n                        ? stables.UPLOAD_FOLDER_BASE_URL + post.photo\r\n                        : images.noImage\r\n                  }\r\n                  alt=\"latest post\"\r\n                  className=\"article-image\"\r\n               />\r\n               <div className=\"article-content\">\r\n                  <Link to={`/topics/${post.slug}`}>\r\n                     <h2 className=\"article-title\">{post.title}</h2>\r\n                  </Link>\r\n               </div>\r\n               <p className=\"article-description\">{post.caption}</p>\r\n               <div className=\"article-info\">\r\n                  <div className=\"readmore-comments\">\r\n                     <a href={`/topics/${post.slug}`} className=\"read-more\">\r\n                        Read More\r\n                     </a>\r\n\r\n                     <div className=\"comment-date\">\r\n                        <a href=\"/\" className=\"comments\">\r\n                           18 Comments\r\n                        </a>\r\n                        <span>\r\n                           {new Date(post.createdAt).getDate()}{\" \"}\r\n                           {new Date(post.createdAt).toLocaleString(\"default\", {\r\n                              month: \"long\",\r\n                           })}\r\n                        </span>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"post-profile\">\r\n                     <img\r\n                        src={\r\n                           post.user.avatar\r\n                              ? stables.UPLOAD_FOLDER_BASE_URL +\r\n                                post.user.avatar\r\n                              : images.user\r\n                        }\r\n                        className=\"profile\"\r\n                        alt=\"The Profile\"\r\n                     />\r\n                     <p className=\"verified\">\r\n                        {post.user.verified ? (\r\n                           <FaCheckCircle className=\"verified-icons\" />\r\n                        ) : (\r\n                           <FaCheckCircle className=\"not-verified\" />\r\n                        )}\r\n                        {post.user.name}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ArticleCard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}