{"ast":null,"code":"import axios from \"axios\";\n\n// Signup\n\nexport const signup = async ({\n  name,\n  email,\n  password\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) throw new Error(error.response.data.message);\n    throw new Error(error.message);\n  }\n};\n\n// Login\nexport const login = async ({\n  email,\n  password\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    });\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) throw new Error(error.response.data.message);\n    throw new Error(error.message);\n  }\n};\n\n// Get User Profile\nexport const getUserProfile = async ({\n  token\n}) => {\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/users/profile\", config);\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) throw new Error(error.response.data.message);\n    throw new Error(error.message);\n  }\n};\n\n// Update User Profile\n\nexport const updateProfile = async ({\n  token,\n  userData\n}) => {\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/users/update\", userData, config);\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) throw new Error(error.response.data.message);\n    throw new Error(error.message);\n  }\n};\nexport const updateProfilePicture = async ({\n  token,\n  formData\n}) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/users/updatepicture\", formData, config);\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) throw new Error(error.response.data.message);\n    throw new Error(error.message);\n  }\n};","map":{"version":3,"names":["axios","signup","name","email","password","data","post","error","response","message","Error","login","getUserProfile","token","config","headers","Authorization","get","updateProfile","userData","put","updateProfilePicture","formData"],"sources":["C:/Users/moral/Desktop/Capstone Project JAR/JAR/src/services/index/users.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Signup\r\n\r\nexport const signup = async ({ name, email, password }) => {\r\n   try {\r\n      const { data } = await axios.post(\"/api/users/register\", {\r\n         name,\r\n         email,\r\n         password,\r\n      });\r\n      return data;\r\n   } catch (error) {\r\n      if (error.response && error.response.data.message)\r\n         throw new Error(error.response.data.message);\r\n      throw new Error(error.message);\r\n   }\r\n};\r\n\r\n// Login\r\nexport const login = async ({ email, password }) => {\r\n   try {\r\n      const { data } = await axios.post(\"/api/users/login\", {\r\n         email,\r\n         password,\r\n      });\r\n      return data;\r\n   } catch (error) {\r\n      if (error.response && error.response.data.message)\r\n         throw new Error(error.response.data.message);\r\n      throw new Error(error.message);\r\n   }\r\n};\r\n\r\n// Get User Profile\r\nexport const getUserProfile = async ({ token }) => {\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            Authorization: `Bearer ${token}`,\r\n         },\r\n      };\r\n      const { data } = await axios.get(\"/api/users/profile\", config);\r\n      return data;\r\n   } catch (error) {\r\n      if (error.response && error.response.data.message)\r\n         throw new Error(error.response.data.message);\r\n      throw new Error(error.message);\r\n   }\r\n};\r\n\r\n// Update User Profile\r\n\r\nexport const updateProfile = async ({ token, userData }) => {\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            Authorization: `Bearer ${token}`,\r\n         },\r\n      };\r\n      const { data } = await axios.put(\"/api/users/update\", userData, config);\r\n      return data;\r\n   } catch (error) {\r\n      if (error.response && error.response.data.message)\r\n         throw new Error(error.response.data.message);\r\n      throw new Error(error.message);\r\n   }\r\n};\r\n\r\nexport const updateProfilePicture = async ({ token, formData }) => {\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${token}`,\r\n         },\r\n      };\r\n      const { data } = await axios.put(\r\n         \"/api/users/updatepicture\",\r\n         formData,\r\n         config\r\n      );\r\n      return data;\r\n   } catch (error) {\r\n      if (error.response && error.response.data.message)\r\n         throw new Error(error.response.data.message);\r\n      throw new Error(error.message);\r\n   }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}