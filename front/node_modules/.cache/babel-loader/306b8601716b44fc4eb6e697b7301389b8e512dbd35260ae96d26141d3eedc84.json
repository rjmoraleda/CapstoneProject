{"ast":null,"code":"import axios from \"axios\";\n\n// Post\n\nexport const getAllPosts = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/posts\");\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) throw new Error(error.response.data.message);\n    throw new Error(error.message);\n  }\n};\nexport const getSinglePost = async ({\n  slug\n}) => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/posts/${slug}`);\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) throw new Error(error.response.data.message);\n    throw new Error(error.message);\n  }\n};\nexport const createPost = async ({\n  token,\n  postData\n}) => {\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/posts`, postData, config);\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) throw new Error(error.response.data.message);\n    throw new Error(error.message);\n  }\n};","map":{"version":3,"names":["axios","getAllPosts","data","get","error","response","message","Error","getSinglePost","slug","createPost","token","postData","config","headers","Authorization","post"],"sources":["C:/Users/moral/Desktop/Capstone Project JAR/JAR/src/services/index/posts.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Post\r\n\r\nexport const getAllPosts = async () => {\r\n   try {\r\n      const { data } = await axios.get(\"/api/posts\");\r\n      return data;\r\n   } catch (error) {\r\n      if (error.response && error.response.data.message)\r\n         throw new Error(error.response.data.message);\r\n      throw new Error(error.message);\r\n   }\r\n};\r\n\r\nexport const getSinglePost = async ({ slug }) => {\r\n   try {\r\n      const { data } = await axios.get(`/api/posts/${slug}`);\r\n      return data;\r\n   } catch (error) {\r\n      if (error.response && error.response.data.message)\r\n         throw new Error(error.response.data.message);\r\n      throw new Error(error.message);\r\n   }\r\n};\r\n\r\nexport const createPost = async ({ token, postData }) => {\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            Authorization: `Bearer ${token}`,\r\n         },\r\n      };\r\n\r\n      const { data } = await axios.post(`/api/posts`, postData, config);\r\n      return data;\r\n   } catch (error) {\r\n      if (error.response && error.response.data.message)\r\n         throw new Error(error.response.data.message);\r\n      throw new Error(error.message);\r\n   }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,YAAY,CAAC;IAC9C,OAAOD,IAAI;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACb,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACI,OAAO,EAC9C,MAAM,IAAIC,KAAK,CAACH,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACI,OAAO,CAAC;IAC/C,MAAM,IAAIC,KAAK,CAACH,KAAK,CAACE,OAAO,CAAC;EACjC;AACH,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAO;EAAEC;AAAK,CAAC,KAAK;EAC9C,IAAI;IACD,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,cAAaM,IAAK,EAAC,CAAC;IACtD,OAAOP,IAAI;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACb,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACI,OAAO,EAC9C,MAAM,IAAIC,KAAK,CAACH,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACI,OAAO,CAAC;IAC/C,MAAM,IAAIC,KAAK,CAACH,KAAK,CAACE,OAAO,CAAC;EACjC;AACH,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACtD,IAAI;IACD,MAAMC,MAAM,GAAG;MACZC,OAAO,EAAE;QACNC,aAAa,EAAG,UAASJ,KAAM;MAClC;IACH,CAAC;IAED,MAAM;MAAET;IAAK,CAAC,GAAG,MAAMF,KAAK,CAACgB,IAAI,CAAE,YAAW,EAAEJ,QAAQ,EAAEC,MAAM,CAAC;IACjE,OAAOX,IAAI;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACb,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACI,OAAO,EAC9C,MAAM,IAAIC,KAAK,CAACH,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACI,OAAO,CAAC;IAC/C,MAAM,IAAIC,KAAK,CAACH,KAAK,CAACE,OAAO,CAAC;EACjC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}