{"ast":null,"code":"import React,{useEffect}from\"react\";import MainLayout from\"../../components/MainLayout\";import{useNavigate}from\"react-router-dom\";import{useForm}from\"react-hook-form\";import{useDispatch,useSelector}from\"react-redux\";import{useMutation,useQuery}from\"@tanstack/react-query\";import{getUserProfile,updateProfile}from\"../../services/index/users\";import\"./profile.css\";import ProfilePicture from\"../../components/ProfilePicture\";import{toast}from\"react-hot-toast\";import{userActions}from\"../../store/reducers/userReducers\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const EditProfile=()=>{var _errors$name,_errors$email,_errors$password;//declaring into variable\nconst navigate=useNavigate();const dispatch=useDispatch();const userState=useSelector(state=>state.user);// fitching the user data from the database\nconst{// data , isLoading , error is a property where\n//assign to profileData, profileIsLoading, profileError in short rename the data , isLoading , error\ndata:profileData,isLoading:profileIsLoading}=useQuery({//function run when the page is loaded\nqueryFn:()=>{return getUserProfile({token:userState.userInfo.token});},queryKey:[\"profile\"]});// creating a mutation for updating the  users\nconst{mutate,isLoading}=useMutation({mutationFn:_ref=>{let{name,email,password}=_ref;return updateProfile({token:userState.userInfo.token,userData:{name,email,password}});},//after getting the data from the mutation this function run\nonSuccess:data=>{dispatch(userActions.setUserInfo(data));//saving the data in the local storage to better experience\nlocalStorage.setItem(\"account\",JSON.stringify(data));toast.success(\"Profile Updated Successful\");console.log(data);},onError:error=>{toast.error(error.message);console.log(error);}});//useEffect Redirect the User to Login upon successfull registration\nuseEffect(()=>{if(!userState.userInfo){navigate(\"/\");}},[navigate,userState.userInfo]);const{register,handleSubmit,formState:{errors,isValid}}=useForm({defaultValues:{name:\"\",email:\"\",password:\"\"},values:{name:profileIsLoading?\"\":profileData===null||profileData===void 0?void 0:profileData.name,email:profileIsLoading?\"\":profileData===null||profileData===void 0?void 0:profileData.email},mode:\"onChange\"});//getting the data from the form\nconst submitHandler=data=>{const{name,email,password}=data;mutate({name,email,password});};return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsx(\"section\",{className:\"register\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"register-container\",children:[/*#__PURE__*/_jsx(ProfilePicture,{avatar:profileData===null||profileData===void 0?void 0:profileData.avatar}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(submitHandler),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"name\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\"// creating validation for the NAME\n,...register(\"name\",{minLength:{value:3,message:\"Name must be at least 3 characters\"},required:{value:true,message:\"Name is required\"}}),placeholder:\"Enter your name\",className:\"\".concat(errors.name?\"error-border\":\"no-error\")}),((_errors$name=errors.name)===null||_errors$name===void 0?void 0:_errors$name.message)&&/*#__PURE__*/_jsx(\"p\",{className:\"error-reg\",children:errors.name.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"email\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\"// creating validation for the EMAIL\n,...register(\"email\",{required:{value:true,message:\"Email is required\"},pattern:{value:/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,message:\"Enter a valid email\"}}),placeholder:\"Enter your email\",className:\"\".concat(errors.name?\"error-border\":\"no-error\")}),((_errors$email=errors.email)===null||_errors$email===void 0?void 0:_errors$email.message)&&/*#__PURE__*/_jsx(\"p\",{className:\"error-reg\",children:errors.email.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"password\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"password\",children:[\"Enter New Password \",/*#__PURE__*/_jsx(\"span\",{children:\"(Optional)\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",...register(\"password\"),placeholder:\"Enter your new password\",className:\"\".concat(errors.password?\"error-border\":\"no-error\")}),((_errors$password=errors.password)===null||_errors$password===void 0?void 0:_errors$password.message)&&/*#__PURE__*/_jsx(\"p\",{className:\"error-reg\",children:errors.password.message})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!isValid||profileIsLoading,className:\"btn-register \".concat(isValid?\"enabled\":\"disabled\"),children:\"Update Profile\"})]})]})})});};export default EditProfile;","map":{"version":3,"names":["React","useEffect","MainLayout","useNavigate","useForm","useDispatch","useSelector","useMutation","useQuery","getUserProfile","updateProfile","ProfilePicture","toast","userActions","jsx","_jsx","jsxs","_jsxs","EditProfile","_errors$name","_errors$email","_errors$password","navigate","dispatch","userState","state","user","data","profileData","isLoading","profileIsLoading","queryFn","token","userInfo","queryKey","mutate","mutationFn","_ref","name","email","password","userData","onSuccess","setUserInfo","localStorage","setItem","JSON","stringify","success","console","log","onError","error","message","register","handleSubmit","formState","errors","isValid","defaultValues","values","mode","submitHandler","children","className","avatar","onSubmit","htmlFor","type","id","minLength","value","required","placeholder","concat","pattern","disabled"],"sources":["C:/Users/moral/Desktop/Capstone Project JAR/JAR/src/pages/profile/EditProfile.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MainLayout from \"../../components/MainLayout\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\r\nimport { getUserProfile, updateProfile } from \"../../services/index/users\";\r\nimport \"./profile.css\";\r\nimport ProfilePicture from \"../../components/ProfilePicture\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { userActions } from \"../../store/reducers/userReducers\";\r\n\r\nconst EditProfile = () => {\r\n   //declaring into variable\r\n   const navigate = useNavigate();\r\n   const dispatch = useDispatch();\r\n   const userState = useSelector((state) => state.user);\r\n\r\n   // fitching the user data from the database\r\n   const {\r\n      // data , isLoading , error is a property where\r\n      //assign to profileData, profileIsLoading, profileError in short rename the data , isLoading , error\r\n      data: profileData,\r\n      isLoading: profileIsLoading,\r\n   } = useQuery({\r\n      //function run when the page is loaded\r\n      queryFn: () => {\r\n         return getUserProfile({ token: userState.userInfo.token });\r\n      },\r\n      queryKey: [\"profile\"],\r\n   });\r\n\r\n   // creating a mutation for updating the  users\r\n   const { mutate, isLoading } = useMutation({\r\n      mutationFn: ({ name, email, password }) => {\r\n         return updateProfile({\r\n            token: userState.userInfo.token,\r\n            userData: { name, email, password },\r\n         });\r\n      },\r\n\r\n      //after getting the data from the mutation this function run\r\n      onSuccess: (data) => {\r\n         dispatch(userActions.setUserInfo(data));\r\n         //saving the data in the local storage to better experience\r\n         localStorage.setItem(\"account\", JSON.stringify(data));\r\n         toast.success(\"Profile Updated Successful\");\r\n         console.log(data);\r\n      },\r\n      onError: (error) => {\r\n         toast.error(error.message);\r\n         console.log(error);\r\n      },\r\n   });\r\n\r\n   //useEffect Redirect the User to Login upon successfull registration\r\n   useEffect(() => {\r\n      if (!userState.userInfo) {\r\n         navigate(\"/\");\r\n      }\r\n   }, [navigate, userState.userInfo]);\r\n\r\n   const {\r\n      register,\r\n      handleSubmit,\r\n      formState: { errors, isValid },\r\n   } = useForm({\r\n      defaultValues: {\r\n         name: \"\",\r\n         email: \"\",\r\n         password: \"\",\r\n      },\r\n      values: {\r\n         name: profileIsLoading ? \"\" : profileData?.name,\r\n         email: profileIsLoading ? \"\" : profileData?.email,\r\n      },\r\n      mode: \"onChange\",\r\n   });\r\n\r\n   //getting the data from the form\r\n   const submitHandler = (data) => {\r\n      const { name, email, password } = data;\r\n      mutate({\r\n         name,\r\n         email,\r\n         password,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <MainLayout>\r\n         <section className=\"register\">\r\n            <div className=\"register-container\">\r\n               <ProfilePicture avatar={profileData?.avatar} />\r\n               <form onSubmit={handleSubmit(submitHandler)}>\r\n                  {/* For NAME */}\r\n                  <div className=\"name\">\r\n                     <label htmlFor=\"name\">Name</label>\r\n\r\n                     <input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        // creating validation for the NAME\r\n                        {...register(\"name\", {\r\n                           minLength: {\r\n                              value: 3,\r\n                              message: \"Name must be at least 3 characters\",\r\n                           },\r\n                           required: {\r\n                              value: true,\r\n                              message: \"Name is required\",\r\n                           },\r\n                        })}\r\n                        placeholder=\"Enter your name\"\r\n                        className={`${\r\n                           errors.name ? \"error-border\" : \"no-error\"\r\n                        }`}\r\n                     />\r\n                     {errors.name?.message && (\r\n                        <p className=\"error-reg\">{errors.name.message}</p>\r\n                     )}\r\n                  </div>\r\n\r\n                  {/* FOR EMAIL */}\r\n                  <div className=\"email\">\r\n                     <label htmlFor=\"email\">Email</label>\r\n\r\n                     <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        // creating validation for the EMAIL\r\n                        {...register(\"email\", {\r\n                           required: {\r\n                              value: true,\r\n                              message: \"Email is required\",\r\n                           },\r\n                           pattern: {\r\n                              value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                              message: \"Enter a valid email\",\r\n                           },\r\n                        })}\r\n                        placeholder=\"Enter your email\"\r\n                        className={`${\r\n                           errors.name ? \"error-border\" : \"no-error\"\r\n                        }`}\r\n                     />\r\n                     {errors.email?.message && (\r\n                        <p className=\"error-reg\">{errors.email.message}</p>\r\n                     )}\r\n                  </div>\r\n\r\n                  {/* FOR PASSWORD */}\r\n                  <div className=\"password\">\r\n                     <label htmlFor=\"password\">\r\n                        Enter New Password <span>(Optional)</span>\r\n                     </label>\r\n\r\n                     <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        {...register(\"password\")}\r\n                        placeholder=\"Enter your new password\"\r\n                        className={`${\r\n                           errors.password ? \"error-border\" : \"no-error\"\r\n                        }`}\r\n                     />\r\n                     {errors.password?.message && (\r\n                        <p className=\"error-reg\">{errors.password.message}</p>\r\n                     )}\r\n                  </div>\r\n\r\n                  {/* FOR SUBMIT BUTTON */}\r\n                  <button\r\n                     type=\"submit\"\r\n                     disabled={!isValid || profileIsLoading}\r\n                     className={`btn-register ${\r\n                        isValid ? \"enabled\" : \"disabled\"\r\n                     }`}\r\n                  >\r\n                     Update Profile\r\n                  </button>\r\n               </form>\r\n            </div>\r\n         </section>\r\n      </MainLayout>\r\n   );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}