{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moral\\\\Desktop\\\\Capstone Project JAR\\\\JAR\\\\src\\\\components\\\\ProfilePicture.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { stables } from \"../constants\";\nimport { IoPersonCircleOutline } from \"react-icons/io5\";\nimport \"./css/profilepicture.css\";\nimport CropEasy from \"./crop/CropEasy\";\nimport { updateProfilePicture } from \"../services/index/users\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport toast from \"react-hot-toast\";\nimport { userActions } from \"../store/reducers/userReducers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePicture = props => {\n  _s();\n  const {\n    avatar\n  } = props;\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n  const userState = useSelector(state => state.user);\n  const [openCrop, setOpenCrop] = useState(false);\n  const [photo, setPhoto] = useState(null);\n  const {\n    mutate,\n    isLoading\n  } = useMutation({\n    mutationFn: ({\n      token,\n      formData\n    }) => {\n      return updateProfilePicture({\n        token: token,\n        formData: formData\n      });\n    },\n    onSuccess: data => {\n      dispatch(userActions.setUserInfo(data));\n      setOpenCrop(false);\n      localStorage.setItem(\"account\", JSON.stringify(data));\n      queryClient.invalidateQueries([\"profile\"]);\n      toast.success(\"Profile Photo is removed\");\n    },\n    onError: error => {\n      toast.error(error.message);\n      console.log(error);\n    }\n  });\n\n  // uploading the image/avatar\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setPhoto({\n      url: URL.createObjectURL(file),\n      file\n    });\n    setOpenCrop(true);\n  };\n  // for deleting the image/avatar\n  const handleDeleteImage = () => {\n    if (window.confirm(\"Are you sure you want to delete this image?\")) {\n      try {\n        const formData = new FormData();\n        formData.append(\"profilePicture\", undefined);\n        mutate({\n          token: userState.userInfo.token,\n          formData: formData\n        });\n      } catch (error) {\n        toast.error(error.message);\n        console.log(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openCrop && /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(CropEasy, {\n      photo: photo,\n      setOpenCrop: setOpenCrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this), document.getElementById(\"portal\")), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-picture\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"profilePicture\",\n          className: \"profile-label\",\n          children: avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stables.UPLOAD_FOLDER_BASE_URL + avatar,\n            alt: \"Profile\",\n            className: \"profile-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-icon\",\n            children: /*#__PURE__*/_jsxDEV(IoPersonCircleOutline, {\n              className: \"profile-icons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"profilePicture\",\n          className: \"profile-input\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile-picture-del\",\n        onClick: handleDeleteImage,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(ProfilePicture, \"SB+RVOexGXexfC+OZuXIusev7NY=\", false, function () {\n  return [useQueryClient, useDispatch, useSelector, useMutation];\n});\n_c = ProfilePicture;\nexport default ProfilePicture;\nvar _c;\n$RefreshReg$(_c, \"ProfilePicture\");","map":{"version":3,"names":["React","useState","createPortal","stables","IoPersonCircleOutline","CropEasy","updateProfilePicture","useMutation","useQueryClient","useDispatch","useSelector","toast","userActions","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePicture","props","_s","avatar","queryClient","dispatch","userState","state","user","openCrop","setOpenCrop","photo","setPhoto","mutate","isLoading","mutationFn","token","formData","onSuccess","data","setUserInfo","localStorage","setItem","JSON","stringify","invalidateQueries","success","onError","error","message","console","log","handleFileChange","e","file","target","files","url","URL","createObjectURL","handleDeleteImage","window","confirm","FormData","append","undefined","userInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","className","htmlFor","src","UPLOAD_FOLDER_BASE_URL","alt","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moral/Desktop/Capstone Project JAR/JAR/src/components/ProfilePicture.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { stables } from \"../constants\";\r\nimport { IoPersonCircleOutline } from \"react-icons/io5\";\r\nimport \"./css/profilepicture.css\";\r\nimport CropEasy from \"./crop/CropEasy\";\r\nimport { updateProfilePicture } from \"../services/index/users\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\nimport { userActions } from \"../store/reducers/userReducers\";\r\n\r\nconst ProfilePicture = (props) => {\r\n   const { avatar } = props;\r\n   const queryClient = useQueryClient();\r\n   const dispatch = useDispatch();\r\n   const userState = useSelector((state) => state.user);\r\n   const [openCrop, setOpenCrop] = useState(false);\r\n   const [photo, setPhoto] = useState(null);\r\n\r\n   const { mutate, isLoading } = useMutation({\r\n      mutationFn: ({ token, formData }) => {\r\n         return updateProfilePicture({\r\n            token: token,\r\n            formData: formData,\r\n         });\r\n      },\r\n      onSuccess: (data) => {\r\n         dispatch(userActions.setUserInfo(data));\r\n         setOpenCrop(false);\r\n         localStorage.setItem(\"account\", JSON.stringify(data));\r\n         queryClient.invalidateQueries([\"profile\"]);\r\n         toast.success(\"Profile Photo is removed\");\r\n      },\r\n      onError: (error) => {\r\n         toast.error(error.message);\r\n         console.log(error);\r\n      },\r\n   });\r\n\r\n   // uploading the image/avatar\r\n   const handleFileChange = (e) => {\r\n      const file = e.target.files[0];\r\n      setPhoto({ url: URL.createObjectURL(file), file });\r\n      setOpenCrop(true);\r\n   };\r\n   // for deleting the image/avatar\r\n   const handleDeleteImage = () => {\r\n      if (window.confirm(\"Are you sure you want to delete this image?\")) {\r\n         try {\r\n            const formData = new FormData();\r\n            formData.append(\"profilePicture\", undefined);\r\n\r\n            mutate({ token: userState.userInfo.token, formData: formData });\r\n         } catch (error) {\r\n            toast.error(error.message);\r\n            console.log(error);\r\n         }\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {openCrop &&\r\n            createPortal(\r\n               <CropEasy photo={photo} setOpenCrop={setOpenCrop} />,\r\n               document.getElementById(\"portal\")\r\n            )}\r\n         <div className=\"profile-container\">\r\n            <div className=\"profile-picture\">\r\n               {/* Checking if the user have an avatar/profile picture\r\n              from the uploads folder src={stables.UPLOAD_FOLDER_BASE_URL + avatar} */}\r\n               <label htmlFor=\"profilePicture\" className=\"profile-label\">\r\n                  {avatar ? (\r\n                     <img\r\n                        src={stables.UPLOAD_FOLDER_BASE_URL + avatar}\r\n                        alt=\"Profile\"\r\n                        className=\"profile-img\"\r\n                     />\r\n                  ) : (\r\n                     <div className=\"profile-icon\">\r\n                        <IoPersonCircleOutline className=\"profile-icons\" />\r\n                     </div>\r\n                  )}\r\n               </label>\r\n               <input\r\n                  type=\"file\"\r\n                  id=\"profilePicture\"\r\n                  className=\"profile-input\"\r\n                  onChange={handleFileChange}\r\n               />\r\n            </div>\r\n            <button\r\n               type=\"button\"\r\n               className=\"profile-picture-del\"\r\n               onClick={handleDeleteImage}\r\n            >\r\n               Delete\r\n            </button>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ProfilePicture;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}