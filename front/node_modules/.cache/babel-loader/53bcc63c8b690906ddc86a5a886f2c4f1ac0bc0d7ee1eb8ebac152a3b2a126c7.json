{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moral\\\\Desktop\\\\Capstone Project JAR\\\\JAR\\\\src\\\\components\\\\crop\\\\CropEasy.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./cropeasy.css\";\nimport Cropper from \"react-easy-crop\";\nimport getCroppedImg from \"./cropImage\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { updateProfilePicture } from \"../../services/index/users\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../../store/reducers/userReducers\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropEasy = ({\n  photo,\n  setOpenCrop\n}) => {\n  _s();\n  const userState = useSelector(state => state.user);\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const {\n    mutate,\n    isLoading\n  } = useMutation({\n    mutationFn: ({\n      token,\n      formData\n    }) => {\n      return updateProfilePicture({\n        token: token,\n        formData: formData\n      });\n    },\n    //after getting the data from the mutation this function run\n    onSuccess: data => {\n      dispatch(userActions.setUserInfo(data));\n      setOpenCrop(false);\n      //saving the data in the local storage to better experience\n      localStorage.setItem(\"account\", JSON.stringify(data));\n      queryClient.invalidateQueries([\"profile\"]);\n      toast.success(\"Profile Photo Updated Successful\");\n      console.log(data);\n    },\n    onError: error => {\n      toast.error(error.message);\n      console.log(error);\n    }\n  });\n  const handleCropComplete = (cropArea, cropAreaPixels) => {\n    setCroppedAreaPixels(cropAreaPixels);\n  };\n  const handleCropImage = async () => {\n    try {\n      var _photo$file, _photo$file2;\n      const croppedImg = await getCroppedImg(photo === null || photo === void 0 ? void 0 : photo.url, croppedAreaPixels);\n      const file = new File([croppedImg.file], `${photo === null || photo === void 0 ? void 0 : (_photo$file = photo.file) === null || _photo$file === void 0 ? void 0 : _photo$file.name}`, {\n        type: photo === null || photo === void 0 ? void 0 : (_photo$file2 = photo.file) === null || _photo$file2 === void 0 ? void 0 : _photo$file2.type\n      });\n      const formData = new FormData();\n      formData.append(\"profilePicture\", file);\n      mutate({\n        token: userState.userInfo.token,\n        formData: formData\n      });\n    } catch (error) {\n      toast.error(error.message);\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pop-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pop\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pop-title\",\n        children: \"Crop Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crop-image\",\n        children: /*#__PURE__*/_jsxDEV(Cropper, {\n          image: photo === null || photo === void 0 ? void 0 : photo.url,\n          crop: crop,\n          zoom: zoom,\n          aspect: 1,\n          onZoomChange: setZoom,\n          onCropChange: setCrop,\n          onCropComplete: handleCropComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"zoomRange\",\n          className: \"zoom\",\n          children: [\"Zoom: \", `${Math.round(zoom * 100)}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"zoomRange\",\n          id: \"zoomRange\",\n          min: 1,\n          max: 3,\n          step: 0.1,\n          value: zoom,\n          onChange: e => setZoom(e.target.value),\n          className: \"zoom-range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crop-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isLoading,\n          className: \"crop-cancel\",\n          onClick: () => setOpenCrop(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"crop-upload\",\n          onClick: handleCropImage,\n          children: \"Crop & Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n};\n_s(CropEasy, \"qadoDCCXUZHBJ/zNL61iyzQA0hU=\", false, function () {\n  return [useSelector, useQueryClient, useDispatch, useMutation];\n});\n_c = CropEasy;\nexport default CropEasy;\nvar _c;\n$RefreshReg$(_c, \"CropEasy\");","map":{"version":3,"names":["React","useState","Cropper","getCroppedImg","useMutation","useQueryClient","updateProfilePicture","useDispatch","useSelector","userActions","toast","jsxDEV","_jsxDEV","CropEasy","photo","setOpenCrop","_s","userState","state","user","queryClient","dispatch","crop","setCrop","x","y","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","mutate","isLoading","mutationFn","token","formData","onSuccess","data","setUserInfo","localStorage","setItem","JSON","stringify","invalidateQueries","success","console","log","onError","error","message","handleCropComplete","cropArea","cropAreaPixels","handleCropImage","_photo$file","_photo$file2","croppedImg","url","file","File","name","type","FormData","append","userInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","image","aspect","onZoomChange","onCropChange","onCropComplete","htmlFor","Math","round","id","min","max","step","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moral/Desktop/Capstone Project JAR/JAR/src/components/crop/CropEasy.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./cropeasy.css\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport getCroppedImg from \"./cropImage\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { updateProfilePicture } from \"../../services/index/users\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userActions } from \"../../store/reducers/userReducers\";\r\nimport toast from \"react-hot-toast\";\r\nconst CropEasy = ({ photo, setOpenCrop }) => {\r\n   const userState = useSelector((state) => state.user);\r\n   const queryClient = useQueryClient();\r\n   const dispatch = useDispatch();\r\n   const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n   const [zoom, setZoom] = useState(1);\r\n   const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n\r\n   const { mutate, isLoading } = useMutation({\r\n      mutationFn: ({ token, formData }) => {\r\n         return updateProfilePicture({\r\n            token: token,\r\n            formData: formData,\r\n         });\r\n      },\r\n\r\n      //after getting the data from the mutation this function run\r\n      onSuccess: (data) => {\r\n         dispatch(userActions.setUserInfo(data));\r\n         setOpenCrop(false);\r\n         //saving the data in the local storage to better experience\r\n         localStorage.setItem(\"account\", JSON.stringify(data));\r\n         queryClient.invalidateQueries([\"profile\"]);\r\n         toast.success(\"Profile Photo Updated Successful\");\r\n         console.log(data);\r\n      },\r\n      onError: (error) => {\r\n         toast.error(error.message);\r\n         console.log(error);\r\n      },\r\n   });\r\n\r\n   const handleCropComplete = (cropArea, cropAreaPixels) => {\r\n      setCroppedAreaPixels(cropAreaPixels);\r\n   };\r\n\r\n   const handleCropImage = async () => {\r\n      try {\r\n         const croppedImg = await getCroppedImg(photo?.url, croppedAreaPixels);\r\n\r\n         const file = new File([croppedImg.file], `${photo?.file?.name}`, {\r\n            type: photo?.file?.type,\r\n         });\r\n\r\n         const formData = new FormData();\r\n         formData.append(\"profilePicture\", file);\r\n\r\n         mutate({ token: userState.userInfo.token, formData: formData });\r\n      } catch (error) {\r\n         toast.error(error.message);\r\n         console.log(error);\r\n      }\r\n   };\r\n   return (\r\n      <div className=\"pop-modal\">\r\n         <div className=\"pop\">\r\n            <h2 className=\"pop-title\">Crop Image</h2>\r\n            <div className=\"crop-image\">\r\n               <Cropper\r\n                  image={photo?.url}\r\n                  crop={crop}\r\n                  zoom={zoom}\r\n                  aspect={1}\r\n                  onZoomChange={setZoom}\r\n                  onCropChange={setCrop}\r\n                  onCropComplete={handleCropComplete}\r\n               />\r\n            </div>\r\n            <div>\r\n               <label htmlFor=\"zoomRange\" className=\"zoom\">\r\n                  Zoom: {`${Math.round(zoom * 100)}`}\r\n               </label>\r\n               <input\r\n                  type=\"range\"\r\n                  name=\"zoomRange\"\r\n                  id=\"zoomRange\"\r\n                  min={1}\r\n                  max={3}\r\n                  step={0.1}\r\n                  value={zoom}\r\n                  onChange={(e) => setZoom(e.target.value)}\r\n                  className=\"zoom-range\"\r\n               />\r\n            </div>\r\n            <div className=\"crop-btn\">\r\n               <button\r\n                  disabled={isLoading}\r\n                  className=\"crop-cancel\"\r\n                  onClick={() => setOpenCrop(false)}\r\n               >\r\n                  Cancel\r\n               </button>\r\n               <button className=\"crop-upload\" onClick={handleCropImage}>\r\n                  Crop & Upload\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default CropEasy;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}